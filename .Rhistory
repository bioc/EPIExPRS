tmp <- EPI.Construct(x = BRCA_Methy_tmp, y = BRCA_RNA_tmp, clinical = BRCA_clinical_tmp, method = 'Interaction',nfolds = 13, impute = F, beta = F )
tmp
tmp[1,]
rm(tmp)
tmp <- EPI.Construct(x = BRCA_Methy_tmp, y = BRCA_RNA_tmp, clinical = BRCA_clinical_tmp, method = 'Interaction',nfolds = 3, impute = F, beta = F )
tmp[1,1]
BRCA_clinical_tmp <- BRCA_clinical_Test[1:26,]
BRCA_RNA_tmp <- BRCA_RNA_Test[,1:26]
BRCA_Methy_tmp <- BRCA_Methy_Test[,1:13]
BRCA_clinical_tmp <- BRCA_Clinical_Test[1:26,]
tmp <- EPI.Construct(x = BRCA_Methy_tmp, y = BRCA_RNA_tmp, clinical = BRCA_clinical_tmp, method = 'Interaction',nfolds = 5, impute = F, beta = F )
BRCA_Methy_tmp <- BRCA_Methy_Test[,1:26]
tmp <- EPI.Construct(x = BRCA_Methy_tmp, y = BRCA_RNA_tmp, clinical = BRCA_clinical_tmp, method = 'Interaction',nfolds = 5, impute = F, beta = F )
tmp[1,1]
usethis::create_package('C:/Users/ilovele1/Desktop/EPIExPRS')
usethis::create_package('C:/Users/ilovele1/Desktop/EPIExPRS_beta')
usethis::create_package('C:/Users/ilovele1/Desktop/EPIExPRSbeta')
tmp <- EPI.Construct(x = BRCA_Methy_tmp, y = BRCA_RNA_tmp, clinical = BRCA_clinical_tmp, method = 'Specific',nfolds = 5, impute = F, beta = F )
tmp
tmp1[1,1]
tmp[1,1]
tmp <- EPI.Construct(x = BRCA_Methy_tmp, y = BRCA_RNA_tmp, clinical = BRCA_clinical_tmp, method = 'Adjusted',nfolds = 5, impute = F, beta = F )
tmp[1,1]
EPIC_Annotation <- readRDS("S:/PHS/Files/ilovele1/For_Indrani/EPIC.hg38.manifest.rds")
save(EPI_Annotation, file = "C:/Users/ilovele1/Desktop/EPIExPRS/data/EPI_Annotation.rda")
library(repitools)
library(Repitools)
install.packages('Repitools')
BiocManager::install("Repitools")
EPIC <- annoGR2DF(EPIC_Annotation)
library(Repitools)
EPIC <- annoGR2DF(EPIC_Annotation)
View(EPIC_Annotation)
View(EPIC)
load("C:/Users/ilovele1/Desktop/EPIExPRS/data/methy_clin.rda")
View(methy_clin)
EPIC_Annotation <- EPIC[,c('chr','start','gene_HGNC')]
EPIC_Annotation <- cbind(EPIC_Annotation[,c(1:2),rownames(EPIC_Annotation),EPIC_Annotation[,3]])
EPIC_Annotation <- cbind(EPIC_Annotation[,c(1:2),rownames(EPIC_Annotation),EPIC_Annotation[,c(3)]])
EPIC_Annotation <- cbind(EPIC_Annotation[,c(1:2),rownames(EPIC_Annotation),EPIC_Annotation[,c(3)])
EPIC_Annotation <- cbind(EPIC_Annotation[,c(1:2)],rownames(EPIC_Annotation),EPIC_Annotation[,c(3)])
colnames(EPIC_Annotation) <- colnames(methy_clin)
View(EPIC_Annotation)
EPIC_Annotation$Gene_Symbol[is.na(EPIC_Annotation)] <- '.'
EPIC_Annotation$Gene_Symbol <- ifelse(is.na(EPIC_Annotation$Gene_Symbol),'.', EPIC_Annotation$Gene_Symbol)
save(EPIC_Annotation, file = 'C:/Users/ilovele1/Deskyop/EPIExPRS/data/EPIC_Annotation.rda')
save(EPIC_Annotation, file = 'C:/Users/ilovele1/Desktop/EPIExPRS/data/EPIC_Annotation.rda')
devtools::document()
library(EPIExPRS)
array = '450K'
array = '450K'
if(array == '450K'){
data("methy_clin")
} else {
data("EPIC_Annotation")
methy_clin <- EPIC_Annotation
rm(EPIC_Annotation)
}
array = 'EPIC'
if(array == '450K'){
data("methy_clin")
} else {
data("EPIC_Annotation")
methy_clin <- EPIC_Annotation
rm(EPIC_Annotation)
}
load("C:/Users/ilovele1/Desktop/EPIExPRS/data/UCEC.rda")
rm(methy_clin)
BiocManager::install("IlluminaHumanMethylation450kanno.ilmn12.hg19")
tmp <- do.call(rbind, UCEC[,2])
dim(UCEC)
rownames(UCEC) <- tmp$ensembl_gene
UCEC1 <- UCEC[,-c(2)]
head(UCEC1)
class(UCEC1) <- 'model'
attr(UCEC1)
class(UCECE1)
class(UCEC1)
View(UCEC1)
save(UCEC1, file = 'C:/Users/ilovele1/Desktop/EPIExPRS/data/UCEC1.rda')
UCEC1 <- UCEC[,-c(2)]
save(UCEC1, file = 'C:/Users/ilovele1/Desktop/EPIExPRS/data/UCEC1.rda')
data(IlluminaHumanMethylation450kanno.ilmn12.hg19)
libraru(IlluminaHumanMethylation450kanno.ilmn12.hg19)
library(IlluminaHumanMethylation450kanno.ilmn12.hg19)
data(IlluminaHumanMethylation450kanno.ilmn12.hg19)
force(IlluminaHumanMethylation450kanno.ilmn12.hg19)
head(IlluminaHumanMethylation450kanno.ilmn12.hg19@annotation)
head(IlluminaHumanMethylation450kanno.ilmn12.hg19@data)
head(IlluminaHumanMethylation450kanno.ilmn12.hg19@defaults)
anno <- IlluminaHumanMethylation450kanno.ilmn12.hg19@data$Other
names(anno)
BiocManager::install("IlluminaHumanMethylation450kmanifest")
library("IlluminaHumanMethylation450kmanifest")
data("IlluminaHumanMethylation450kmanifest")
force(IlluminaHumanMethylation450kmanifest)
View(IlluminaHumanMethylation450kmanifest)
View(IlluminaHumanMethylation450kanno.ilmn12.hg19)
data("Locations")
force(Locations)
data("Manifest")
force(Manifest)
data("Other")
force(Other)
Other[rownames(Other) %in% 'cg00000029',]
Other[rownames(Other) %in% 'cg00000292',]
head(IlluminaHumanMethylation450kanno.ilmn12.hg19@data$Other)
head(IlluminaHumanMethylation450kanno.ilmn12.hg19@Other)
head(IlluminaHumanMethylation450kanno.ilmn12.hg19::Other)
head(IlluminaHumanMethylation450kanno.ilmn12.hg19::rownames(Other))
head(rownames(IlluminaHumanMethylation450kanno.ilmn12.hg19::Other))
load('C:/Users/ilovele1/Desktop/EPIxPRS/inst/testdata/BRCA_Methy_Test.Rda')
x <- BRCA_Methy_Test
methy_clin <-  IlluminaHumanMethylation450kanno.ilmn12.hg19::Other[
which(rownames(IlluminaHumanMethylation450kanno.ilmn12.hg19::Other) %in%
rownames(x)),]
head(methy_clin)
which(!rownames(x) %in% rownames(methy_clin))
rownames(BRCA_Methy_Test)[1100]
View(BRCA_Methy_Test)
head(ELMER.data::EPIC.hg38.manifest)
BiocManager::install("ELMER.data")
head(ELMER.data::EPIC.hg38.manifest)
Sys.info()["sysname"]
array = "450K"
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.rda")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(hg.38, basename(annotation), mode = mode)
}
}
install.packages('downloader')
usethis::use_package(downloader)
usethis::use_package('downloader')
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.rda")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(hg.38, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.rda")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download('hg.38', basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.rda")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download('hg38', basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.rda")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download('.hg38.rda', basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.hg38.rda")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.hg38.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.hg38.rds")
} else {
annotation <- paste0(base,"hm450/hm450.manifest.hg38.rds")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rda")
} else {
annotation <- paste0(base,"hm450/hm450.hg38.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
basename(annotation)
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rda")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/current/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rds")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rds")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/20180909/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rda")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.io/InfiniumAnnotation/20180909/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rds")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rds")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.github.io/InfiniumAnnotation/20180909/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.manifest.hg38.rda")
} else {
annotation <- paste0(base,"HM450/HM450.manifest.hg38.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "http://zwdzwd.github.io/InfiniumAnnotation/20180909/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rda")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "https://zwdzwd.s3.amazonaws.com/InfiniumAnnotation/20180909/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rda")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rda")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
for(array in c("450K","EPIC")) {
base <- "https://zwdzwd.s3.amazonaws.com/InfiniumAnnotation/20180909/"
if(array == "EPIC") {
annotation <- paste0(base,"EPIC/EPIC.hg38.manifest.rds")
} else {
annotation <- paste0(base,"HM450/HM450.hg38.manifest.rds")
}
if(!file.exists(basename(annotation))) {
if(Sys.info()["sysname"] == "Windows") mode <- "wb" else  mode <- "w"
downloader::download(annotation, basename(annotation), mode = mode)
}
}
rm(methy_clin)
if(array == "EPIC") {
methy_clin <- readRDS(url('https://zwdzwd.s3.amazonaws.com/InfiniumAnnotation/20180909/EPIC/EPIC.hg38.manifest.rds'))
} else {
methy_clin <- readRDS(url('https://zwdzwd.s3.amazonaws.com/InfiniumAnnotation/20180909/HM450/HM450.hg38.manifest.rds'))
}
View(methy_clin)
usethis::use_package("Repitools")
methy_clin <- annoGR2DF(methy_clin)
rownames(methy_clin)
colnames(methy_clin)
methy_clin <- methy_clin[rownanes(methy_clin) %in% rownames(x), c("chr", "start", "gene_HGNC")]
methy_clin <- methy_clin[rownames(methy_clin) %in% rownames(x), c("chr", "start", "gene_HGNC")]
head(methy_clin)
load("C:/Users/ilovele1/Desktop/EPIExPRS/data/BRCA.rda")
tmp <- do.call(rbind,BRCA[,2])
rownames(BRCA) <- tmp$ensembl_gene
BRCA1 <- BRCA[,-c(2)]
save(BRCA1, file = "C:/Users/ilovele1/Desktop/EPIExPRS/data/BRCA1.rda")
saveRDS(BRCA1, file = "C/Users/ilovele1/Desktop/EPIExPRS/data/BRCA1.rds")
saveRDS(BRCA1, file = "C:/Users/ilovele1/Desktop/EPIExPRS/data/BRCA1.rds")
rm(BRCA)
load(url("https://github.com/iloveless1/EPIExPRS-Data/blob/main/UCEC.rda"))
load(url("https://github.com/iloveless1/EPIExPRS-Data/raw/main/BRCA.rda"))
load(url("https://github.com/iloveless1/EPIExPRS-Data/raw/main/UCEC.rda"))
rm(UCEC)
load(url("https://github.com/iloveless1/EPIExPRS-Data/blob/main/UCEC.rda"))
devtools::check_built()
devtools::document()
git init
devtools::document()
file.exists("~/.ssh/id_rsa.pub")
Cancer <- 'PRAD'
devtools::document()
library(EPIExPRS)
model_search('cg21837192',Cancer = 'PRAD')
model_search('cg21837192',Cancer = 'PRAD')
model_search('cg21837192',Cancer = 'PRAD')
devtools::document()
library(EPIExPRS)
model_search('cg21837192',Cancer = 'PRAD')
library(BiocCheck)
BiocManager::install("BiocCheck")
library(BiocCheck)
BiocCheck(package = "EPIExPRS", ...)
BiocCheck(package = "EPIExPRS")
BiocCheck(package = "C:/Users/ilovele1/Desktop/EPIExPRS")
roxygen2::roxygenise()
load("C:/Users/ilovele1/Desktop/EPIxPRS/inst/testdata/BRCA_Methy_Test.Rda")
seq_len(BRCA_Methy_Test)
seq_len(nrow(BRCA_Methy_Test))
@import foreach
#' @import foreach
roxygen2::roxygenise()
roxygen2::roxygenise()
BiocCheck(package = "C:/Users/ilovele1/Desktop/EPIExPRS")
seq(10)
tmp <- sample(seq(nfolds),15,replace=T)
nfold = 10
tmp <- sample(seq(nfolds),15,replace=T)
nfolds = 10
tmp <- sample(seq(nfolds),15,replace=T)
tmp
roxygen2::roxygenise()
library(EPIExPRS)
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.zip")
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
devtools::document()
devtools::create()
devtools::create("C:/Users/ilovele1/Desktop/")
devtools::create("C:/Users/ilovele1/Desktop/")
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
x <- 10
seq(10)
seq(x)
seq(x-2)
traceback()
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
BiocCheck::BiocCheck("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
BiocCheck::BiocCheckGitClone("C:/Users/ilovele1/Desktop/EPIExPRS_0.99.5.tar.gz")
BiocCheck::BiocCheckGitClone("C:/Users/ilovele1/Desktop/EPIExPRS/")
library(readr)
Interaction_Expression <- read_csv("S:/PHS/Files/ilovele1/Methyliation_yalai/Interaction_Expression.csv")
View(Interaction_Expression)
BCR = c(rep(0,100)),rep(1,162))
BCR = c(rep(0,100),rep(1,162))
library(EPIExPRS)
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = BCR)
devtools::document()
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = BCR)
devtools::document()
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = BCR)
devtools::document()
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = BCR)
devtools::document()
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = BCR)
colnames(clinical)
colnames(BCR)
colnames(BCR) <-
'BCR'
BCR <- as.data.frame(BCR)
colnanes(BCR) <- BCR
colnanms(BCR) <- 'BCR'
colnames(BCR) <- 'BCR'
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = BCR)
colnames(BCR)
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = 'BCR')
devtools::document()
EPI.Assoc(EXP=Interaction_Expression, method = 'logistic',clinical = BCR, phen = 'BCR')
EXP <- Interaction_Expression
i <- 1
pred_gene_exp <- EXP[i,]
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
clinical <- BCR
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
pred_gene_exp <- t(EXP[i,])
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
results <- summary(stats::glm(phen ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
phen
phen <- 'BCR'
results <- summary(stats::glm(phen ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
View(pred_gene_exp)
dim(clinical)
clinical <- t(clinical)
pred_gene_exp <- EXP[i,]
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
merged <- as.data.frame(rbind(clinical,pred_gene_exp))
pred_gene_exp <- t(EXP[i,])
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
merged <- as.data.frame(rbind(clinical,pred_gene_exp))
pred_gene_exp <- EXP[i,]
clinical <- t(clinical)
pred_gene_exp <- EXP[i,]
pred_gene_exp <- t(EXP[i,])
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
results <- summary(stats::glm(phen ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
View(merged)
library(readr)
Interaction_Expression <- read_csv("S:/PHS/Files/ilovele1/Methyliation_yalai/Interaction_Expression.csv". header = T)
View(Interaction_Expression)
library(readr)
Interaction_Expression <- read_csv("S:/PHS/Files/ilovele1/Methyliation_yalai/Interaction_Expression.csv", row.names = 1)
View(Interaction_Expression)
library(readr)
Interaction_Expression <- read_csv("S:/PHS/Files/ilovele1/Methyliation_yalai/Interaction_Expression.csv", rownames = 1)
View(Interaction_Expression)
library(readr)
Interaction_Expression <- read.csv("S:/PHS/Files/ilovele1/Methyliation_yalai/Interaction_Expression.csv", rownames = 1)
View(Interaction_Expression)
library(readr)
Interaction_Expression <- read.csv("S:/PHS/Files/ilovele1/Methyliation_yalai/Interaction_Expression.csv", row.names = 1)
View(Interaction_Expression)
EXP = Interaction_Expression
BCR <- BCR[-c(262)]
pred_gene_exp <- t(EXP[i,])
BCR <- BCR[,-c(262)]
BCR <- BCR[-c(262),]
BCR <- BCR[-c(262)]
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
BCR <- as.data.frame(BCR)
pred_gene_exp <- t(EXP[i,])
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
pred_gene_exp <- EXP[i,]
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
View(merged)
pred_gene_exp <- t(EXP[i,])
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
merged <- as.data.frame(rbind(clinical,pred_gene_exp))
results <- summary(stats::glm(phen ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
clinical <- BCR
merged <- as.data.frame(cbind(clinical,pred_gene_exp))
results <- summary(stats::glm(phen ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
head(merged)
results <- summary(stats::glm(BCR ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
results <- summary(stats::glm(BCR ~pred_gene_exp , data = merged, family = binomial))$coefficients
results
results <- summary(stats::glm(paste0(phen) ~. , data = merged, family = binomial))$coefficients['pred_gene_exp', ]
merged[1:5,'phen']
merged[1:5,paste0('phen')]
devtools::document()
devtools::document()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
BiocCheck::BiocCheckGitClone()
getwd()
devtools::document()
